---
############
# BUILDERS #
############

- builder:
      name: oom-create-netrc
      builders:
          - inject:
                properties-content: "SERVER_ID={server-id}"
          - shell: !include-raw-escape: ../shell/oom-create-netrc.sh

###########
# ANCHORS #
###########
- helm_job_boiler_plate: &helm_job_boiler_plate
      name: helm_job_boiler_plate

      ######################
      # Default parameters #
      ######################

      branch: master
      submodule-recursive: true

      # default params for helm jobs
      build_script: ""
      git-url: "$GIT_URL/$PROJECT"
      post_build_script: ""
      pre_build_script: ""
      submodule-disable: false
      submodule-timeout: 10
      build-timeout: 240
      helm_bin: "{helm_bin}"

      #####################
      # Job Configuration #
      #####################

      project-type: freestyle
      node: "{build-node}"

      properties:
          - lf-infra-properties:
                build-days-to-keep: "{build-days-to-keep}"

      parameters:
          - lf-infra-parameters:
                branch: "{branch}"
                project: "{project}"
                stream: "{stream}"
                lftools-version: "{lftools-version}"

      wrappers:
          - lf-infra-wrappers:
                build-timeout: "{build-timeout}"
                jenkins-ssh-credential: "{jenkins-ssh-credential}"

      publishers:
          - lf-infra-publish

#################
# JOB TEMPLATES #
#################
- job-template:
      name: "{project-name}-{stream}-verify-{helm_bin}"
      # Job template for helm verify jobs

      <<: *helm_job_boiler_plate
      concurrent: true

      scm:
          - gerrit-trigger-scm:
                refspec: "$GERRIT_REFSPEC"
                choosing-strategy: "gerrit"
                submodule-recursive: "{submodule-recursive}"

      triggers:
          - gerrit-trigger-helm-patch-submitted:
                status-context: "{project}-Helm-Verify"
                server: "{server-name}"
                project: "{project}"
                branch: "{branch}"
                files: "{files}"

      builders:
          - lf-infra-pre-build
          - shell: |
                echo "export HELM_BIN={helm_bin}" > helm.prop
          - shell: "{obj:pre_build_script}"
          - shell: "{obj:build_script}"

- job-template:
      name: "{project-name}-{stream}-merge-helm"
      # Job template for Helm merge jobs

      <<: *helm_job_boiler_plate

      scm:
          - gerrit-trigger-scm:
                refspec: ""
                choosing-strategy: "default"
                submodule-recursive: "{submodule-recursive}"

      triggers:
          - gerrit-trigger-helm-patch-merged:
                server: "{server-name}"
                project: "{project}"
                branch: "{branch}"
                files: "{files}"

      builders:
          - lf-infra-pre-build
          - lf-provide-maven-settings:
                global-settings-file: "{mvn-global-settings}"
                settings-file: "{mvn-settings}"
          - shell: |
                echo "export HELM_BIN={helm_bin}" > helm.prop
          - shell: "{obj:pre_build_script}"
          - shell: "{obj:build_script}"
          - oom-create-netrc:
                server-id: oom-helm
          - inject:
                properties-content: |
                    BUILD_TYPE=snapshot
          - shell: "{obj:post_build_script}"
          - lf-provide-maven-settings-cleanup

- job-template:
      name: "{project-name}-{stream}-release-helm"
      # Job template for Helm stage jobs

      <<: *helm_job_boiler_plate

      scm:
          - gerrit-trigger-scm:
                refspec: ""
                choosing-strategy: "default"
                submodule-recursive: "{submodule-recursive}"

      triggers:
          - gerrit:
                helm_bin: "{helm_bin}"
                server-name: "{gerrit-server-name}"
                trigger-on:
                    - comment-added-contains-event:
                          comment-contains-value: '^Patch Set\s+\d+:\s+release-helm\s*$'
                projects:
                    - project-compare-type: "ANT"
                      project-pattern: "{project}"
                      branches:
                          - branch-compare-type: "ANT"
                            branch-pattern: "**/{branch}"
                      file-paths:
                          - compare-type: "ANT"
                            pattern: "**"

      builders:
          - lf-infra-pre-build
          - lf-provide-maven-settings:
                global-settings-file: "{mvn-global-settings}"
                settings-file: "{mvn-settings}"
          - shell: |
                echo "export HELM_BIN={helm_bin}" > helm.prop
          - shell: "{obj:pre_build_script}"
          - shell: "{obj:build_script}"
          - oom-create-netrc:
                server-id: oom-helm
          - inject:
                properties-content: |
                    BUILD_TYPE=release
          - shell: "{obj:post_build_script}"
          - lf-provide-maven-settings-cleanup
